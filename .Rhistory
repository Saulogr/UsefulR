library(tidyverse)
library(janitor)
forestfire = read.csv("databases/forestfires.csv") #importa train.csv
glimpse(forestfire) #função do dplyr para ver um resumo dos dados
library(janitor)
forestfire = clean_names(forestfire)
head(forestfire)
#selecionar a variável wind
forestfire %>% select(wind) %>% head()
#selecionar tudo, menor as cordenadas x e y
forestfire %>% select(-(x:y)) %>% head()
#seleciona variáveis que começam com a letra d
forestfire %>% select(starts_with("d")) %>% head()
# seleciona variáveis que termina com Width
iris %>% select(ends_with("Width")) %>% head()
#seleciona as variáveis do vetor var
var = names(mtcars)[1:3]
mtcars %>% select(one_of(var)) %>% head()
#seleciona variáveis dentro do intervalo numérico 3 a 5
df = data.frame(x1 = rnorm(6),
x2 = rnorm(6, 5, 1),
x3 = rnorm(6, 50, 5),
x4 = rnorm(6, 35, 7),
x5 = rnorm(6, 12, 3))
head(df)
df %>% select(num_range("x",3:5))
#seleciona variáveis com três letras
forestfire %>% select(matches("^...$")) %>% head()
#retira as observações da variável temp e armazena em dist_temp
dist_temp = forestfire %>% pull(temp)
hist(dist_temp, col = "blue", main = "Temperatura",
ylab = "Frequência", xlab = "Temperatura (°C)")
forestfire %>% filter(month == "jan")
forestfire %>% filter(temp > 25) %>% head(10)
#temperatura maior que 25 °C no mês de Agosto
forestfire %>% filter(temp > 25, month == "aug") %>% head(10)
#poderiamos utilizar também:
# forestfire %>% filter(temp > 25 & month == "aug")
#criando um dataframe com a duas linhas iguais
df <- data.frame(a = c(1 ,2, 3, 4, 4),
b = c(1, 2, 3, 4, 4),
c = c(1, 2, 3, 4, 4))
df %>% distinct()
#amostra com 30% do tamanho original
sample1 = forestfire %>% sample_frac(0.3, replace = FALSE)
dim(sample1)
#amostra com tamnho 100
sample2 = forestfire %>% sample_n(100, replace = FALSE)
dim(sample2)
#observações 27 a 35
slice(forestfire, 27:35)
#utilizando condições lógicas, poderiamos usar filter() também
slice(forestfire, which(forestfire$area > 200))
#top 10 por area
forestfire %>% top_n(n = 10, wt = area)
#criar a coluna fwi como sendo a média e atribui  a forestfire
forestfire %>% mutate(fwi = (ffmc + dmc + dc + isi)/4) -> forestfire
#exibe as antigas e noas variáveis
forestfire %>% select(ffmc, dmc, dc, isi, fwi) %>%head()
#mudar unidade de medida da temperatura para Kelvin
forestfire %>% mutate(temp = temp + 273.15) %>% head(5)
#adicionando estações do ano
forestfire %>% mutate(seas = case_when(month == "jan" ~ "summer",
month == "feb" ~ "summer",
month == "mar" ~ "summer",
month == "apr" ~ "fall",
month == "may" ~ "fall",
month == "jun" ~ "fall",
month == "jul" ~ "winter",
month == "aug" ~ "winter",
month == "sep" ~ "winter",
month == "oct" ~ "spring",
month == "nov" ~ "spring",
month == "dec" ~ "spring")) -> forestfire
forestfire %>% mutate(per = if_else(day == "sat"|day == "sun",
"weekend",
"week")) -> forestfire
x = data.frame(paciente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
#preparando dataframe exemplo
library(tidyverse)
tibble(paciente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
x = tibble(paciente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
x = tibble(cliente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
y= tibble(cliente = c("Pedro", "Saulo", "Maria"),
profissão = c("Dentista", "Engenheiro", "Professor(a)"),
cidade = c("Recife", "Aracaju", "Maceió"))
y
inner_join(x, y, by = cliente)
x = tibble(cliente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
y= tibble(cliente = c("Pedro", "Saulo", "Maria"),
profissão = c("Dentista", "Engenheiro", "Professor(a)"),
cidade = c("Recife", "Aracaju", "Maceió"))
inner_join(x, y, by = cliente)
compras = tibble(cliente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
cadastro = tibble(cliente = c("Pedro", "Saulo", "Maria"),
profissão = c("Dentista", "Engenheiro", "Professor(a)"),
cidade = c("Recife", "Aracaju", "Maceió"))
inner_join(compras, cadastro, by = cliente)
compras
cadastro
names(compras)
names(cadastro)
inner_join(compras, cadastro, by = "cliente")
#left_join
left_join(compras,cadastro)
right_join(compras, cadastro)
#right_join
right_join(cadastro, compras)
#left_join
left_join(compras,cadastro)
#right_join
right_join(compras,cadastro)
full_join(compras,cadastro)
#semi_join()
semi_join(compras,cadastro)
#anti_join
anti_join(compras, cadastro)
#left_join
left_join(compras,cadastro)
#right_join
right_join(compras,cadastro)
full_join(compras,cadastro)
#semi_join()
semi_join(compras,cadastro)
#anti_join
anti_join(compras, cadastro)
#combina o que tem nos dois e mantem todas as colunas
inner_join(compras, cadastro, by = "cliente")
#combina o que tem nos dois e mantem todas as colunas
inner_join(compras, cadastro, by = "cliente")
#left_join
left_join(compras,cadastro)
nest_join(compras, cadastro)
band_instruments2
band_instruments
#semi_join()
semi_join(compras,cadastro)
nasa
starwars
View(forestfire)
forestfire %>% group_by(month) %>% summarise(total = n())
# n() é uma função que conta quantas vezes um caso ocorreu
forestfire %>% group_by(month) %>% summarise(total = n()) %>% head(12)
forestfire %>% group_by(month) %>% summarise(total = n(),
mean_tem = mean(temp))
forestfire %>% group_by(day) %>% summarise(total = n())
compras = data.frame(cliente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
cadastro = data.frame(cliente = c("Pedro", "Saulo", "Maria"),
profissão = c("Dentista", "Engenheiro", "Professor(a)"),
cidade = c("Recife", "Aracaju", "Maceió"))
compras = data.frame(cliente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
cadastro = data.frame(cliente = c("Pedro", "Saulo", "Maria"),
profissão = c("Dentista", "Engenheiro", "Professor(a)"),
cidade = c("Recife", "Aracaju", "Maceió"))
inner_join(cliente, cadastro)
inner_join(compras, cadastro)
inner_join(compras, cadastro, by = "cliente")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
#combina o que tem nos dois e mantem todas as colunas
inner_join(compras, cadastro, by = "cliente")
#tibble é uma forma melhorada de data.frame
compras = tibble(cliente = c("Saulo", "José", "Maria"),
compras = c("Sapato", "Calça", "Camisa"),
pagamento = c("Crédito", "Débito", "Dinheiro"))
cadastro = tibble(cliente = c("Pedro", "Saulo", "Maria"),
profissão = c("Dentista", "Engenheiro", "Professor(a)"),
cidade = c("Recife", "Aracaju", "Maceió"))
inner_join(compras, cadastro, by = "cliente")
left_join(compras,cadastro, by = "cliente")
full_join(compras,cadastro, by = "cliente")
semi_join(compras,cadastro, by = "cliente")
anti_join(compras, cadastro)
anti_join(compras, cadastro)
